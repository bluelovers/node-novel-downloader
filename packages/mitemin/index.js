"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseAsync = exports.parse = void 0;
/**
 * Created by user on 2020/1/6.
 */
const lazy_url_1 = require("lazy-url");
function parse(input) {
    let u = new lazy_url_1.default(input);
    if (!/\.mitemin/.test(u.host)) {
        throw new Error(`not support host ${u.host}`);
    }
    let subdomain = u.host.split('.')[0];
    if (/^img/.test(subdomain)) {
        let basename = u.paths[u.paths.length - 1];
        let m = basename.match(/^(?<filename>.+?)(?:\.(?<size>\d+)\.(?:jpg|png|gif|bmp))?$/);
        let { filename, size } = m.groups;
        let u2 = new lazy_url_1.default(u);
        let paths = u2.paths.slice();
        paths[paths.length - 1] = filename;
        u2.pathname = paths.join('/');
        return {
            url: u.toString(),
            fullsize: u2.toString(),
            size,
            filename,
        };
    }
    else if (u.pathname.match(/\bviewimage(?<size>big)?\/icode\/(?<icode>\w+)/)) {
        let size = RegExp.$1;
        let icode = RegExp.$2;
        let u2 = new lazy_url_1.default(u);
        let paths = u2.paths.slice();
        paths = paths.map(v => {
            if (/^(viewimage)(?:big)?$/.test(v)) {
                return RegExp.$1;
            }
            return v;
        });
        u2.pathname = paths.join('/');
        let authorid = subdomain;
        return {
            url: u.toString(),
            fullsize: u2.toString(),
            size,
            icode,
            authorid,
        };
    }
    throw new Error(`unknown url ${u.toString()}`);
}
exports.parse = parse;
async function parseAsync(input) {
    return parse(input);
}
exports.parseAsync = parseAsync;
exports.default = parse;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7R0FFRztBQUNILHVDQUErQjtBQUUvQixTQUFnQixLQUFLLENBQUMsS0FBbUI7SUFFeEMsSUFBSSxDQUFDLEdBQUcsSUFBSSxrQkFBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRTNCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFDN0I7UUFDQyxNQUFNLElBQUksS0FBSyxDQUFDLG9CQUFvQixDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztLQUM5QztJQUVELElBQUksU0FBUyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRXJDLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFDMUI7UUFDQyxJQUFJLFFBQVEsR0FBVyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBRW5ELElBQUksQ0FBQyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsNERBQTRELENBQUMsQ0FBQztRQUVyRixJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUM7UUFFbEMsSUFBSSxFQUFFLEdBQUcsSUFBSSxrQkFBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRXhCLElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDN0IsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLEdBQUcsUUFBUSxDQUFDO1FBRW5DLEVBQUUsQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUU5QixPQUFPO1lBQ04sR0FBRyxFQUFFLENBQUMsQ0FBQyxRQUFRLEVBQUU7WUFDakIsUUFBUSxFQUFFLEVBQUUsQ0FBQyxRQUFRLEVBQUU7WUFDdkIsSUFBSTtZQUNKLFFBQVE7U0FDUixDQUFBO0tBQ0Q7U0FDSSxJQUFJLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLGdEQUFnRCxDQUFDLEVBQzNFO1FBQ0MsSUFBSSxJQUFJLEdBQUcsTUFBTSxDQUFDLEVBQUUsQ0FBQztRQUNyQixJQUFJLEtBQUssR0FBRyxNQUFNLENBQUMsRUFBRSxDQUFDO1FBRXRCLElBQUksRUFBRSxHQUFHLElBQUksa0JBQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUV4QixJQUFJLEtBQUssR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQzdCLEtBQUssR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ3JCLElBQUksdUJBQXVCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUNuQztnQkFDQyxPQUFPLE1BQU0sQ0FBQyxFQUFFLENBQUM7YUFDakI7WUFFRCxPQUFPLENBQUMsQ0FBQztRQUNWLENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksUUFBUSxHQUFXLFNBQVMsQ0FBQztRQUVqQyxPQUFPO1lBQ04sR0FBRyxFQUFFLENBQUMsQ0FBQyxRQUFRLEVBQUU7WUFDakIsUUFBUSxFQUFFLEVBQUUsQ0FBQyxRQUFRLEVBQUU7WUFDdkIsSUFBSTtZQUNKLEtBQUs7WUFDTCxRQUFRO1NBQ1IsQ0FBQTtLQUNEO0lBRUQsTUFBTSxJQUFJLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDaEQsQ0FBQztBQWhFRCxzQkFnRUM7QUFFTSxLQUFLLFVBQVUsVUFBVSxDQUFDLEtBQW1CO0lBRW5ELE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFBO0FBQ3BCLENBQUM7QUFIRCxnQ0FHQztBQUVELGtCQUFlLEtBQUssQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSB1c2VyIG9uIDIwMjAvMS82LlxuICovXG5pbXBvcnQgTGF6eVVSTCBmcm9tICdsYXp5LXVybCc7XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZShpbnB1dDogc3RyaW5nIHwgVVJMKVxue1xuXHRsZXQgdSA9IG5ldyBMYXp5VVJMKGlucHV0KTtcblxuXHRpZiAoIS9cXC5taXRlbWluLy50ZXN0KHUuaG9zdCkpXG5cdHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoYG5vdCBzdXBwb3J0IGhvc3QgJHt1Lmhvc3R9YCk7XG5cdH1cblxuXHRsZXQgc3ViZG9tYWluID0gdS5ob3N0LnNwbGl0KCcuJylbMF07XG5cblx0aWYgKC9eaW1nLy50ZXN0KHN1YmRvbWFpbikpXG5cdHtcblx0XHRsZXQgYmFzZW5hbWU6IHN0cmluZyA9IHUucGF0aHNbdS5wYXRocy5sZW5ndGggLSAxXTtcblxuXHRcdGxldCBtID0gYmFzZW5hbWUubWF0Y2goL14oPzxmaWxlbmFtZT4uKz8pKD86XFwuKD88c2l6ZT5cXGQrKVxcLig/OmpwZ3xwbmd8Z2lmfGJtcCkpPyQvKTtcblxuXHRcdGxldCB7IGZpbGVuYW1lLCBzaXplIH0gPSBtLmdyb3VwcztcblxuXHRcdGxldCB1MiA9IG5ldyBMYXp5VVJMKHUpO1xuXG5cdFx0bGV0IHBhdGhzID0gdTIucGF0aHMuc2xpY2UoKTtcblx0XHRwYXRoc1twYXRocy5sZW5ndGggLSAxXSA9IGZpbGVuYW1lO1xuXG5cdFx0dTIucGF0aG5hbWUgPSBwYXRocy5qb2luKCcvJyk7XG5cblx0XHRyZXR1cm4ge1xuXHRcdFx0dXJsOiB1LnRvU3RyaW5nKCksXG5cdFx0XHRmdWxsc2l6ZTogdTIudG9TdHJpbmcoKSxcblx0XHRcdHNpemUsXG5cdFx0XHRmaWxlbmFtZSxcblx0XHR9XG5cdH1cblx0ZWxzZSBpZiAodS5wYXRobmFtZS5tYXRjaCgvXFxidmlld2ltYWdlKD88c2l6ZT5iaWcpP1xcL2ljb2RlXFwvKD88aWNvZGU+XFx3KykvKSlcblx0e1xuXHRcdGxldCBzaXplID0gUmVnRXhwLiQxO1xuXHRcdGxldCBpY29kZSA9IFJlZ0V4cC4kMjtcblxuXHRcdGxldCB1MiA9IG5ldyBMYXp5VVJMKHUpO1xuXG5cdFx0bGV0IHBhdGhzID0gdTIucGF0aHMuc2xpY2UoKTtcblx0XHRwYXRocyA9IHBhdGhzLm1hcCh2ID0+IHtcblx0XHRcdGlmICgvXih2aWV3aW1hZ2UpKD86YmlnKT8kLy50ZXN0KHYpKVxuXHRcdFx0e1xuXHRcdFx0XHRyZXR1cm4gUmVnRXhwLiQxO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gdjtcblx0XHR9KTtcblxuXHRcdHUyLnBhdGhuYW1lID0gcGF0aHMuam9pbignLycpO1xuXG5cdFx0bGV0IGF1dGhvcmlkOiBzdHJpbmcgPSBzdWJkb21haW47XG5cblx0XHRyZXR1cm4ge1xuXHRcdFx0dXJsOiB1LnRvU3RyaW5nKCksXG5cdFx0XHRmdWxsc2l6ZTogdTIudG9TdHJpbmcoKSxcblx0XHRcdHNpemUsXG5cdFx0XHRpY29kZSxcblx0XHRcdGF1dGhvcmlkLFxuXHRcdH1cblx0fVxuXG5cdHRocm93IG5ldyBFcnJvcihgdW5rbm93biB1cmwgJHt1LnRvU3RyaW5nKCl9YCk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBwYXJzZUFzeW5jKGlucHV0OiBzdHJpbmcgfCBVUkwpXG57XG5cdHJldHVybiBwYXJzZShpbnB1dClcbn1cblxuZXhwb3J0IGRlZmF1bHQgcGFyc2VcbiJdfQ==