"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Created by user on 2020/1/6.
 */
const lazy_url_1 = require("lazy-url");
function parse(input) {
    let u = new lazy_url_1.default(input);
    if (!/\.mitemin/.test(u.host)) {
        throw new Error(`not support host ${u.host}`);
    }
    let subdomain = u.host.split('.')[0];
    if (/^img/.test(subdomain)) {
        let basename = u.paths[u.paths.length - 1];
        let m = basename.match(/^(?<filename>.+?)(?:\.(?<size>\d+)\.(?:jpg|png|gif|bmp))?$/);
        let { filename, size } = m.groups;
        let u2 = new lazy_url_1.default(u);
        let paths = u2.paths.slice();
        paths[paths.length - 1] = filename;
        u2.pathname = paths.join('/');
        return {
            url: u.toString(),
            fullsize: u2.toString(),
            size,
            filename,
        };
    }
    else if (u.pathname.match(/\bviewimage(?<size>big)?\/icode\/(?<icode>\w+)/)) {
        let size = RegExp.$1;
        let icode = RegExp.$2;
        let u2 = new lazy_url_1.default(u);
        let paths = u2.paths.slice();
        paths = paths.map(v => {
            if (/^(viewimage)(?:big)?$/.test(v)) {
                return RegExp.$1;
            }
            return v;
        });
        u2.pathname = paths.join('/');
        let authorid = subdomain;
        return {
            url: u.toString(),
            fullsize: u2.toString(),
            size,
            icode,
            authorid,
        };
    }
    throw new Error(`unknown url ${u.toString()}`);
}
exports.parse = parse;
async function parseAsync(input) {
    return parse(input);
}
exports.parseAsync = parseAsync;
exports.default = parse;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOztHQUVHO0FBQ0gsdUNBQStCO0FBRS9CLFNBQWdCLEtBQUssQ0FBQyxLQUFtQjtJQUV4QyxJQUFJLENBQUMsR0FBRyxJQUFJLGtCQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFM0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUM3QjtRQUNDLE1BQU0sSUFBSSxLQUFLLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0tBQzlDO0lBRUQsSUFBSSxTQUFTLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFckMsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUMxQjtRQUNDLElBQUksUUFBUSxHQUFXLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFFbkQsSUFBSSxDQUFDLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyw0REFBNEQsQ0FBQyxDQUFDO1FBRXJGLElBQUksRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQztRQUVsQyxJQUFJLEVBQUUsR0FBRyxJQUFJLGtCQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFeEIsSUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUM3QixLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBRyxRQUFRLENBQUM7UUFFbkMsRUFBRSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLE9BQU87WUFDTixHQUFHLEVBQUUsQ0FBQyxDQUFDLFFBQVEsRUFBRTtZQUNqQixRQUFRLEVBQUUsRUFBRSxDQUFDLFFBQVEsRUFBRTtZQUN2QixJQUFJO1lBQ0osUUFBUTtTQUNSLENBQUE7S0FDRDtTQUNJLElBQUksQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsZ0RBQWdELENBQUMsRUFDM0U7UUFDQyxJQUFJLElBQUksR0FBRyxNQUFNLENBQUMsRUFBRSxDQUFDO1FBQ3JCLElBQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxFQUFFLENBQUM7UUFFdEIsSUFBSSxFQUFFLEdBQUcsSUFBSSxrQkFBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRXhCLElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDN0IsS0FBSyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDckIsSUFBSSx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQ25DO2dCQUNDLE9BQU8sTUFBTSxDQUFDLEVBQUUsQ0FBQzthQUNqQjtZQUVELE9BQU8sQ0FBQyxDQUFDO1FBQ1YsQ0FBQyxDQUFDLENBQUM7UUFFSCxFQUFFLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFOUIsSUFBSSxRQUFRLEdBQVcsU0FBUyxDQUFDO1FBRWpDLE9BQU87WUFDTixHQUFHLEVBQUUsQ0FBQyxDQUFDLFFBQVEsRUFBRTtZQUNqQixRQUFRLEVBQUUsRUFBRSxDQUFDLFFBQVEsRUFBRTtZQUN2QixJQUFJO1lBQ0osS0FBSztZQUNMLFFBQVE7U0FDUixDQUFBO0tBQ0Q7SUFFRCxNQUFNLElBQUksS0FBSyxDQUFDLGVBQWUsQ0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUNoRCxDQUFDO0FBaEVELHNCQWdFQztBQUVNLEtBQUssVUFBVSxVQUFVLENBQUMsS0FBbUI7SUFFbkQsT0FBTyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUE7QUFDcEIsQ0FBQztBQUhELGdDQUdDO0FBRUQsa0JBQWUsS0FBSyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IHVzZXIgb24gMjAyMC8xLzYuXG4gKi9cbmltcG9ydCBMYXp5VVJMIGZyb20gJ2xhenktdXJsJztcblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlKGlucHV0OiBzdHJpbmcgfCBVUkwpXG57XG5cdGxldCB1ID0gbmV3IExhenlVUkwoaW5wdXQpO1xuXG5cdGlmICghL1xcLm1pdGVtaW4vLnRlc3QodS5ob3N0KSlcblx0e1xuXHRcdHRocm93IG5ldyBFcnJvcihgbm90IHN1cHBvcnQgaG9zdCAke3UuaG9zdH1gKTtcblx0fVxuXG5cdGxldCBzdWJkb21haW4gPSB1Lmhvc3Quc3BsaXQoJy4nKVswXTtcblxuXHRpZiAoL15pbWcvLnRlc3Qoc3ViZG9tYWluKSlcblx0e1xuXHRcdGxldCBiYXNlbmFtZTogc3RyaW5nID0gdS5wYXRoc1t1LnBhdGhzLmxlbmd0aCAtIDFdO1xuXG5cdFx0bGV0IG0gPSBiYXNlbmFtZS5tYXRjaCgvXig/PGZpbGVuYW1lPi4rPykoPzpcXC4oPzxzaXplPlxcZCspXFwuKD86anBnfHBuZ3xnaWZ8Ym1wKSk/JC8pO1xuXG5cdFx0bGV0IHsgZmlsZW5hbWUsIHNpemUgfSA9IG0uZ3JvdXBzO1xuXG5cdFx0bGV0IHUyID0gbmV3IExhenlVUkwodSk7XG5cblx0XHRsZXQgcGF0aHMgPSB1Mi5wYXRocy5zbGljZSgpO1xuXHRcdHBhdGhzW3BhdGhzLmxlbmd0aCAtIDFdID0gZmlsZW5hbWU7XG5cblx0XHR1Mi5wYXRobmFtZSA9IHBhdGhzLmpvaW4oJy8nKTtcblxuXHRcdHJldHVybiB7XG5cdFx0XHR1cmw6IHUudG9TdHJpbmcoKSxcblx0XHRcdGZ1bGxzaXplOiB1Mi50b1N0cmluZygpLFxuXHRcdFx0c2l6ZSxcblx0XHRcdGZpbGVuYW1lLFxuXHRcdH1cblx0fVxuXHRlbHNlIGlmICh1LnBhdGhuYW1lLm1hdGNoKC9cXGJ2aWV3aW1hZ2UoPzxzaXplPmJpZyk/XFwvaWNvZGVcXC8oPzxpY29kZT5cXHcrKS8pKVxuXHR7XG5cdFx0bGV0IHNpemUgPSBSZWdFeHAuJDE7XG5cdFx0bGV0IGljb2RlID0gUmVnRXhwLiQyO1xuXG5cdFx0bGV0IHUyID0gbmV3IExhenlVUkwodSk7XG5cblx0XHRsZXQgcGF0aHMgPSB1Mi5wYXRocy5zbGljZSgpO1xuXHRcdHBhdGhzID0gcGF0aHMubWFwKHYgPT4ge1xuXHRcdFx0aWYgKC9eKHZpZXdpbWFnZSkoPzpiaWcpPyQvLnRlc3QodikpXG5cdFx0XHR7XG5cdFx0XHRcdHJldHVybiBSZWdFeHAuJDE7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB2O1xuXHRcdH0pO1xuXG5cdFx0dTIucGF0aG5hbWUgPSBwYXRocy5qb2luKCcvJyk7XG5cblx0XHRsZXQgYXV0aG9yaWQ6IHN0cmluZyA9IHN1YmRvbWFpbjtcblxuXHRcdHJldHVybiB7XG5cdFx0XHR1cmw6IHUudG9TdHJpbmcoKSxcblx0XHRcdGZ1bGxzaXplOiB1Mi50b1N0cmluZygpLFxuXHRcdFx0c2l6ZSxcblx0XHRcdGljb2RlLFxuXHRcdFx0YXV0aG9yaWQsXG5cdFx0fVxuXHR9XG5cblx0dGhyb3cgbmV3IEVycm9yKGB1bmtub3duIHVybCAke3UudG9TdHJpbmcoKX1gKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHBhcnNlQXN5bmMoaW5wdXQ6IHN0cmluZyB8IFVSTClcbntcblx0cmV0dXJuIHBhcnNlKGlucHV0KVxufVxuXG5leHBvcnQgZGVmYXVsdCBwYXJzZVxuIl19