"use strict";
/**
 * Created by user on 2018/3/18/018.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("../util");
const path = require("upath2");
function padStart(id, pad = '0', len = 4) {
    return id.toString().padStart(len, '0') + pad;
}
exports.padStart = padStart;
function getVolumePath(self, { volume, vid, path_novel, }, optionsRuntime) {
    let dirname;
    let _vid = '';
    dirname = self.trimFilenameVolume(volume.volume_title);
    if (!optionsRuntime.noDirPrefix) {
        _vid = padStart(vid);
        _vid += '_';
    }
    if (!dirname && optionsRuntime.allowEmptyVolumeTitle) {
        dirname = vid.toString() + 'empty';
    }
    if (!dirname) {
        throw new RangeError(`volume_title is empty`);
    }
    dirname = path.join(path_novel, `${_vid}${dirname}`);
    return dirname;
}
exports.getVolumePath = getVolumePath;
function getFilePath(self, { chapter, cid, dirname, ext = '.txt', idx, volume, vid, }, optionsRuntime = {}) {
    let file;
    let prefix = '';
    let pad = '';
    file = self.trimFilenameChapter(chapter.chapter_title);
    if (!optionsRuntime.noFirePrefix) {
        let idxx;
        if (optionsRuntime.filePrefixMode > 1) {
            if (util_1.isUndef(chapter.chapter_index, '', true)) {
                idxx = '';
            }
            else if (optionsRuntime.filePrefixMode == 3 || optionsRuntime.filePrefixMode > 4) {
                idxx = idx;
            }
            else {
                idxx = chapter.chapter_index;
                if (optionsRuntime.startIndex) {
                    idxx += optionsRuntime.startIndex;
                }
            }
        }
        else if (optionsRuntime.filePrefixMode > 0 || util_1.isUndef(chapter.chapter_index)) {
            idxx = cid;
            if (optionsRuntime.startIndex) {
                idxx += optionsRuntime.startIndex;
            }
        }
        else if (!optionsRuntime.filePrefixMode) {
            idxx = idx;
        }
        else {
            idxx = chapter.chapter_index;
        }
        if (idxx !== '') {
            prefix = padStart(idxx);
            prefix += '_';
        }
    }
    if (!optionsRuntime.noFilePadend && chapter.chapter_date) {
        pad = '.' + chapter.chapter_date.format('YYYYMMDDHHmm');
    }
    if (!file) {
        throw _createError(`chapter_title is empty ${chapter.chapter_title}`);
    }
    if (!dirname) {
        throw _createError(`dirname is empty ${dirname}`);
    }
    let fullfile = path.join(dirname, `${prefix}${file}${pad}${ext}`);
    return fullfile;
}
exports.getFilePath = getFilePath;
function _createError(msg, _data) {
    let e = new RangeError(msg);
    // @ts-ignore
    e._data = _data;
    // @ts-ignore
    return e;
}
exports.default = exports;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJmcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7O0FBSUgsa0NBQWtDO0FBRWxDLCtCQUFnQztBQUVoQyxTQUFnQixRQUFRLENBQUMsRUFBRSxFQUFFLEdBQUcsR0FBRyxHQUFHLEVBQUUsR0FBRyxHQUFHLENBQUM7SUFFOUMsT0FBTyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUM7QUFDL0MsQ0FBQztBQUhELDRCQUdDO0FBRUQsU0FBZ0IsYUFBYSxDQUFDLElBQWUsRUFBRSxFQUM5QyxNQUFNLEVBQ04sR0FBRyxFQUNILFVBQVUsR0FLVixFQUFFLGNBQStCO0lBRWpDLElBQUksT0FBZSxDQUFDO0lBQ3BCLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQztJQUVkLE9BQU8sR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBRXZELElBQUksQ0FBQyxjQUFjLENBQUMsV0FBVyxFQUMvQjtRQUNDLElBQUksR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFckIsSUFBSSxJQUFJLEdBQUcsQ0FBQztLQUNaO0lBRUQsSUFBSSxDQUFDLE9BQU8sSUFBSSxjQUFjLENBQUMscUJBQXFCLEVBQ3BEO1FBQ0MsT0FBTyxHQUFHLEdBQUcsQ0FBQyxRQUFRLEVBQUUsR0FBRyxPQUFPLENBQUM7S0FDbkM7SUFFRCxJQUFJLENBQUMsT0FBTyxFQUNaO1FBQ0MsTUFBTSxJQUFJLFVBQVUsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0tBQzlDO0lBRUQsT0FBTyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUM3QixHQUFHLElBQUksR0FBRyxPQUFPLEVBQUUsQ0FDbkIsQ0FBQztJQUVGLE9BQU8sT0FBTyxDQUFDO0FBQ2hCLENBQUM7QUFyQ0Qsc0NBcUNDO0FB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LzE4LzAxOC5cbiAqL1xuXG5pbXBvcnQgZnMgPSByZXF1aXJlKCdmcy1leHRyYScpO1xuaW1wb3J0IHsgdHJpbUZpbGVuYW1lIH0gZnJvbSAnZnMtaWNvbnYvdXRpbCc7XG5pbXBvcnQgeyBpc1VuZGVmIH0gZnJvbSAnLi4vdXRpbCc7XG5pbXBvcnQgTm92ZWxTaXRlLCB7IElPcHRpb25zUnVudGltZSB9IGZyb20gJy4vaW5kZXgnO1xuaW1wb3J0IHBhdGggPSByZXF1aXJlKCd1cGF0aDInKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHBhZFN0YXJ0KGlkLCBwYWQgPSAnMCcsIGxlbiA9IDQpOiBzdHJpbmdcbntcblx0cmV0dXJuIGlkLnRvU3RyaW5nKCkucGFkU3RhcnQobGVuLCAnMCcpICsgcGFkO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Vm9sdW1lUGF0aChzZWxmOiBOb3ZlbFNpdGUsIHtcblx0dm9sdW1lLFxuXHR2aWQsXG5cdHBhdGhfbm92ZWwsXG59OiB7XG5cdHZvbHVtZTogTm92ZWxTaXRlLklWb2x1bWUsXG5cdHZpZDogbnVtYmVyLFxuXHRwYXRoX25vdmVsOiBzdHJpbmcsXG59LCBvcHRpb25zUnVudGltZTogSU9wdGlvbnNSdW50aW1lKTogc3RyaW5nXG57XG5cdGxldCBkaXJuYW1lOiBzdHJpbmc7XG5cdGxldCBfdmlkID0gJyc7XG5cblx0ZGlybmFtZSA9IHNlbGYudHJpbUZpbGVuYW1lVm9sdW1lKHZvbHVtZS52b2x1bWVfdGl0bGUpO1xuXG5cdGlmICghb3B0aW9uc1J1bnRpbWUubm9EaXJQcmVmaXgpXG5cdHtcblx0XHRfdmlkID0gcGFkU3RhcnQodmlkKTtcblxuXHRcdF92aWQgKz0gJ18nO1xuXHR9XG5cblx0aWYgKCFkaXJuYW1lICYmIG9wdGlvbnNSdW50aW1lLmFsbG93RW1wdHlWb2x1bWVUaXRsZSlcblx0e1xuXHRcdGRpcm5hbWUgPSB2aWQudG9TdHJpbmcoKSArICdlbXB0eSc7XG5cdH1cblxuXHRpZiAoIWRpcm5hbWUpXG5cdHtcblx0XHR0aHJvdyBuZXcgUmFuZ2VFcnJvcihgdm9sdW1lX3RpdGxlIGlzIGVtcHR5YCk7XG5cdH1cblxuXHRkaXJuYW1lID0gcGF0aC5qb2luKHBhdGhfbm92ZWwsXG5cdFx0YCR7X3ZpZH0ke2Rpcm5hbWV9YFxuXHQpO1xuXG5cdHJldHVybiBkaXJuYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RmlsZVBhdGgoc2VsZjogTm92ZWxTaXRlLCB7XG5cdGNoYXB0ZXIsXG5cdGNpZCxcblx0ZGlybmFtZSxcblx0ZXh0ID0gJy50eHQnLFxuXG5cdGlkeCxcblxuXHR2b2x1bWUsXG5cdHZpZCxcbn06IHtcblx0Y2hhcHRlcjogTm92ZWxTaXRlLklDaGFwdGVyLFxuXHRjaWQ6IG51bWJlcixcblx0ZGlybmFtZTogc3RyaW5nLFxuXHRleHQ/OiBzdHJpbmcsXG5cblx0aWR4OiBudW1iZXIsXG5cblx0dm9sdW1lPzogTm92ZWxTaXRlLklWb2x1bWUsXG5cdHZpZD86IG51bWJlcixcbn0sIG9wdGlvbnNSdW50aW1lOiBJT3B0aW9uc1J1bnRpbWUgPSB7fSk6IHN0cmluZ1xue1xuXHRsZXQgZmlsZTogc3RyaW5nO1xuXHRsZXQgcHJlZml4ID0gJyc7XG5cdGxldCBwYWQgPSAnJztcblxuXHRmaWxlID0gc2VsZi50cmltRmlsZW5hbWVDaGFwdGVyKGNoYXB0ZXIuY2hhcHRlcl90aXRsZSk7XG5cblx0aWYgKCFvcHRpb25zUnVudGltZS5ub0ZpcmVQcmVmaXgpXG5cdHtcblx0XHRsZXQgaWR4eDogbnVtYmVyIHwgc3RyaW5nO1xuXG5cdFx0aWYgKG9wdGlvbnNSdW50aW1lLmZpbGVQcmVmaXhNb2RlID4gMSlcblx0XHR7XG5cdFx0XHRpZiAoaXNVbmRlZihjaGFwdGVyLmNoYXB0ZXJfaW5kZXgsICcnLCB0cnVlKSlcblx0XHRcdHtcblx0XHRcdFx0aWR4eCA9ICcnO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSBpZiAob3B0aW9uc1J1bnRpbWUuZmlsZVByZWZpeE1vZGUgPT0gMyB8fCBvcHRpb25zUnVudGltZS5maWxlUHJlZml4TW9kZSA+IDQpXG5cdFx0XHR7XG5cdFx0XHRcdGlkeHggPSBpZHg7XG5cdFx0XHR9XG5cdFx0XHRlbHNlXG5cdFx0XHR7XG5cdFx0XHRcdGlkeHggPSBjaGFwdGVyLmNoYXB0ZXJfaW5kZXggYXMgbnVtYmVyO1xuXG5cdFx0XHRcdGlmIChvcHRpb25zUnVudGltZS5zdGFydEluZGV4KVxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0aWR4eCArPSBvcHRpb25zUnVudGltZS5zdGFydEluZGV4O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGVsc2UgaWYgKG9wdGlvbnNSdW50aW1lLmZpbGVQcmVmaXhNb2RlID4gMCB8fCBpc1VuZGVmKGNoYXB0ZXIuY2hhcHRlcl9pbmRleCkpXG5cdFx0e1xuXHRcdFx0aWR4eCA9IGNpZDtcblxuXHRcdFx0aWYgKG9wdGlvbnNSdW50aW1lLnN0YXJ0SW5kZXgpXG5cdFx0XHR7XG5cdFx0XHRcdGlkeHggKz0gb3B0aW9uc1J1bnRpbWUuc3RhcnRJbmRleDtcblx0XHRcdH1cblx0XHR9XG5cdFx0ZWxzZSBpZiAoIW9wdGlvbnNSdW50aW1lLmZpbGVQcmVmaXhNb2RlKVxuXHRcdHtcblx0XHRcdGlkeHggPSBpZHg7XG5cdFx0fVxuXHRcdGVsc2Vcblx0XHR7XG5cdFx0XHRpZHh4ID0gY2hhcHRlci5jaGFwdGVyX2luZGV4O1xuXHRcdH1cblxuXHRcdGlmIChpZHh4ICE9PSAnJylcblx0XHR7XG5cdFx0XHRwcmVmaXggPSBwYWRTdGFydChpZHh4KTtcblx0XHRcdHByZWZpeCArPSAnXyc7XG5cdFx0fVxuXHR9XG5cblx0aWYgKCFvcHRpb25zUnVudGltZS5ub0ZpbGVQYWRlbmQgJiYgY2hhcHRlci5jaGFwdGVyX2RhdGUpXG5cdHtcblx0XHRwYWQgPSAnLicgKyBjaGFwdGVyLmNoYXB0ZXJfZGF0ZS5mb3JtYXQoJ1lZWVlNTURESEhtbScpO1xuXHR9XG5cblx0aWYgKCFmaWxlKVxuXHR7XG5cdFx0dGhyb3cgX2NyZWF0ZUVycm9yKGBjaGFwdGVyX3RpdGxlIGlzIGVtcHR5ICR7Y2hhcHRlci5jaGFwdGVyX3RpdGxlfWApO1xuXHR9XG5cblx0aWYgKCFkaXJuYW1lKVxuXHR7XG5cdFx0dGhyb3cgX2NyZWF0ZUVycm9yKGBkaXJuYW1lIGlzIGVtcHR5ICR7ZGlybmFtZX1gKTtcblx0fVxuXG5cdGxldCBmdWxsZmlsZSA9IHBhdGguam9pbihkaXJuYW1lLFxuXHRcdGAke3ByZWZpeH0ke2ZpbGV9JHtwYWR9JHtleHR9YFxuXHQpO1xuXG5cdHJldHVybiBmdWxsZmlsZTtcbn1cblxuZnVuY3Rpb24gX2NyZWF0ZUVycm9yPFQ+KG1zZzogc3RyaW5nLCBfZGF0YT86IFQpOiBSYW5nZUVycm9yICYge1xuXHRfZGF0YTogVCxcbn1cbntcblx0bGV0IGUgPSBuZXcgUmFuZ2VFcnJvcihtc2cpO1xuXG5cdC8vIEB0cy1pZ25vcmVcblx0ZS5fZGF0YSA9IF9kYXRhO1xuXG5cdC8vIEB0cy1pZ25vcmVcblx0cmV0dXJuIGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGV4cG9ydHMgYXMgdHlwZW9mIGltcG9ydCgnLi9mcycpO1xuIl19