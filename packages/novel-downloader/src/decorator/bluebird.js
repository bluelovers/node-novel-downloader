"use strict";
/**
 * Created by user on 2018/2/10/010.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_utils_1 = require("decorator-utils");
const Bluebird = require("bluebird");
const PromiseBluebird = require("bluebird");
exports.PromiseBluebird = PromiseBluebird;
exports.bluebirdDecorator = decorator_utils_1.DecoratorUtils.createDecorator([
    decorator_utils_1.DecoratorUtils.declarationTypes.CLASS_METHOD,
    decorator_utils_1.DecoratorUtils.declarationTypes.CLASS_ACCESSOR,
    decorator_utils_1.DecoratorUtils.declarationTypes.OBJECT_LITERAL_METHOD,
    decorator_utils_1.DecoratorUtils.declarationTypes.OBJECT_LITERAL_ACCESSOR
], (target, propertyKey, descriptor) => {
    let method = descriptor.value;
    descriptor.value = function (...args) {
        let self = this;
        //return returnValue instanceof Promise ? Bluebird.resolve(returnValue) : returnValue;
        return Bluebird.resolve().then(function () {
            return method.apply(self, args);
        });
    };
    return descriptor;
});
function bluebirdDecorator2(target, propertyKey, descriptor) {
    /*
    if (descriptor === undefined)
    {
        descriptor = Object.getOwnPropertyDescriptor(target, propertyKey);
    }
    */
    descriptor.value = PromiseBluebird.method(descriptor.value);
    return descriptor;
}
exports.bluebirdDecorator2 = bluebirdDecorator2;
exports.default = bluebirdDecorator2;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmx1ZWJpcmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJibHVlYmlyZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7O0FBRUgscURBQWlEO0FBQ2pELHFDQUFzQztBQUN0Qyw0Q0FBNkM7QUFFcEMsMENBQWU7QUFFWCxRQUFBLGlCQUFpQixHQUFHLGdDQUFjLENBQUMsZUFBZSxDQUFDO0lBQy9ELGdDQUFjLENBQUMsZ0JBQWdCLENBQUMsWUFBWTtJQUM1QyxnQ0FBYyxDQUFDLGdCQUFnQixDQUFDLGNBQWM7SUFDOUMsZ0NBQWMsQ0FBQyxnQkFBZ0IsQ0FBQyxxQkFBcUI7SUFDckQsZ0NBQWMsQ0FBQyxnQkFBZ0IsQ0FBQyx1QkFBdUI7Q0FDdkQsRUFBRSxDQUFJLE1BQWMsRUFBRSxXQUE0QixFQUFFLFVBQTZELEVBQUUsRUFBRTtJQUVySCxJQUFJLE1BQU0sR0FBRyxVQUFVLENBQUMsS0FBSyxDQUFDO0lBRTlCLFVBQVUsQ0FBQyxLQUFLLEdBQUcsVUFBVSxHQUFHLElBQUk7UUFFbkMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLHNGQUFzRjtRQUN0RixPQUFPLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxJQUFJLENBQUM7WUFFOUIsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNqQyxDQUFDLENBQUMsQ0FBQztJQUNKLENBQUMsQ0FBQztJQUVGLE9BQU8sVUFBVSxDQUFDO0FBQ25CLENBQUMsQ0FBb0IsQ0FBQztBQUV0QixTQUFnQixrQkFBa0IsQ0FBSSxNQUFXLEVBQUUsV0FBbUIsRUFBRSxVQUE4QjtJQUVyRzs7Ozs7TUFLRTtJQUNGLFVBQVUsQ0FBQyxLQUFLLEdBQUcsZUFBZSxDQUFDLE1BQU0sQ0FBSSxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFL0QsT0FBTyxVQUFVLENBQUM7QUFDbkIsQ0FBQztBQVhELGdEQVdDO0FBRUQsa0JBQWUsa0JBQWtCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgdXNlciBvbiAyMDE4LzIvMTAvMDEwLlxuICovXG5cbmltcG9ydCB7IERlY29yYXRvclV0aWxzIH0gZnJvbSBcImRlY29yYXRvci11dGlsc1wiO1xuaW1wb3J0IEJsdWViaXJkID0gcmVxdWlyZShcImJsdWViaXJkXCIpO1xuaW1wb3J0IFByb21pc2VCbHVlYmlyZCA9IHJlcXVpcmUoXCJibHVlYmlyZFwiKTtcblxuZXhwb3J0IHsgUHJvbWlzZUJsdWViaXJkIH1cblxuZXhwb3J0IGNvbnN0IGJsdWViaXJkRGVjb3JhdG9yID0gRGVjb3JhdG9yVXRpbHMuY3JlYXRlRGVjb3JhdG9yKFtcblx0RGVjb3JhdG9yVXRpbHMuZGVjbGFyYXRpb25UeXBlcy5DTEFTU19NRVRIT0QsXG5cdERlY29yYXRvclV0aWxzLmRlY2xhcmF0aW9uVHlwZXMuQ0xBU1NfQUNDRVNTT1IsXG5cdERlY29yYXRvclV0aWxzLmRlY2xhcmF0aW9uVHlwZXMuT0JKRUNUX0xJVEVSQUxfTUVUSE9ELFxuXHREZWNvcmF0b3JVdGlscy5kZWNsYXJhdGlvblR5cGVzLk9CSkVDVF9MSVRFUkFMX0FDQ0VTU09SXG5dLCA8VD4odGFyZ2V0OiBPYmplY3QsIHByb3BlcnR5S2V5OiBzdHJpbmcgfCBzeW1ib2wsIGRlc2NyaXB0b3I6IFR5cGVkUHJvcGVydHlEZXNjcmlwdG9yPCguLi5hcmdzKSA9PiBCbHVlYmlyZDxUPj4pID0+XG57XG5cdGxldCBtZXRob2QgPSBkZXNjcmlwdG9yLnZhbHVlO1xuXG5cdGRlc2NyaXB0b3IudmFsdWUgPSBmdW5jdGlvbiAoLi4uYXJncyk6IEJsdWViaXJkPFQ+XG5cdHtcblx0XHRsZXQgc2VsZiA9IHRoaXM7XG5cdFx0Ly9yZXR1cm4gcmV0dXJuVmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlID8gQmx1ZWJpcmQucmVzb2x2ZShyZXR1cm5WYWx1ZSkgOiByZXR1cm5WYWx1ZTtcblx0XHRyZXR1cm4gQmx1ZWJpcmQucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24gKClcblx0XHR7XG5cdFx0XHRyZXR1cm4gbWV0aG9kLmFwcGx5KHNlbGYsIGFyZ3MpO1xuXHRcdH0pO1xuXHR9O1xuXG5cdHJldHVybiBkZXNjcmlwdG9yO1xufSkgYXMgTWV0aG9kRGVjb3JhdG9yO1xuXG5leHBvcnQgZnVuY3Rpb24gYmx1ZWJpcmREZWNvcmF0b3IyPFQ+KHRhcmdldDogYW55LCBwcm9wZXJ0eUtleTogc3RyaW5nLCBkZXNjcmlwdG9yOiBQcm9wZXJ0eURlc2NyaXB0b3IpXG57XG5cdC8qXG5cdGlmIChkZXNjcmlwdG9yID09PSB1bmRlZmluZWQpXG5cdHtcblx0XHRkZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIHByb3BlcnR5S2V5KTtcblx0fVxuXHQqL1xuXHRkZXNjcmlwdG9yLnZhbHVlID0gUHJvbWlzZUJsdWViaXJkLm1ldGhvZDxUPihkZXNjcmlwdG9yLnZhbHVlKTtcblxuXHRyZXR1cm4gZGVzY3JpcHRvcjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYmx1ZWJpcmREZWNvcmF0b3IyO1xuIl19