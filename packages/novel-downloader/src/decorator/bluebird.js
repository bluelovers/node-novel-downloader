"use strict";
/**
 * Created by user on 2018/2/10/010.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.bluebirdDecorator2 = exports.bluebirdDecorator = exports.PromiseBluebird = void 0;
const decorator_utils_1 = require("decorator-utils");
const Bluebird = require("bluebird");
const PromiseBluebird = require("bluebird");
exports.PromiseBluebird = PromiseBluebird;
exports.bluebirdDecorator = decorator_utils_1.DecoratorUtils.createDecorator([
    decorator_utils_1.DecoratorUtils.declarationTypes.CLASS_METHOD,
    decorator_utils_1.DecoratorUtils.declarationTypes.CLASS_ACCESSOR,
    decorator_utils_1.DecoratorUtils.declarationTypes.OBJECT_LITERAL_METHOD,
    decorator_utils_1.DecoratorUtils.declarationTypes.OBJECT_LITERAL_ACCESSOR
], (target, propertyKey, descriptor) => {
    let method = descriptor.value;
    descriptor.value = function (...args) {
        let self = this;
        //return returnValue instanceof Promise ? Bluebird.resolve(returnValue) : returnValue;
        return Bluebird.resolve().then(function () {
            return method.apply(self, args);
        });
    };
    return descriptor;
});
function bluebirdDecorator2(target, propertyKey, descriptor) {
    /*
    if (descriptor === undefined)
    {
        descriptor = Object.getOwnPropertyDescriptor(target, propertyKey);
    }
    */
    descriptor.value = PromiseBluebird.method(descriptor.value);
    return descriptor;
}
exports.bluebirdDecorator2 = bluebirdDecorator2;
exports.default = bluebirdDecorator2;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmx1ZWJpcmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJibHVlYmlyZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7OztBQUVILHFEQUFpRDtBQUNqRCxxQ0FBc0M7QUFDdEMsNENBQTZDO0FBRXBDLDBDQUFlO0FBRVgsUUFBQSxpQkFBaUIsR0FBRyxnQ0FBYyxDQUFDLGVBQWUsQ0FBQztJQUMvRCxnQ0FBYyxDQUFDLGdCQUFnQixDQUFDLFlBQVk7SUFDNUMsZ0NBQWMsQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjO0lBQzlDLGdDQUFjLENBQUMsZ0JBQWdCLENBQUMscUJBQXFCO0lBQ3JELGdDQUFjLENBQUMsZ0JBQWdCLENBQUMsdUJBQXVCO0NBQ3ZELEVBQUUsQ0FBSSxNQUFjLEVBQUUsV0FBNEIsRUFBRSxVQUE2RCxFQUFFLEVBQUU7SUFFckgsSUFBSSxNQUFNLEdBQUcsVUFBVSxDQUFDLEtBQUssQ0FBQztJQUU5QixVQUFVLENBQUMsS0FBSyxHQUFHLFVBQVUsR0FBRyxJQUFJO1FBRW5DLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQztRQUNoQixzRkFBc0Y7UUFDdEYsT0FBTyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDO1lBRTlCLE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDakMsQ0FBQyxDQUFDLENBQUM7SUFDSixDQUFDLENBQUM7SUFFRixPQUFPLFVBQVUsQ0FBQztBQUNuQixDQUFDLENBQW9CLENBQUM7QUFFdEIsU0FBZ0Isa0JBQWtCLENBQUksTUFBVyxFQUFFLFdBQW1CLEVBQUUsVUFBOEI7SUFFckc7Ozs7O01BS0U7SUFDRixVQUFVLENBQUMsS0FBSyxHQUFHLGVBQWUsQ0FBQyxNQUFNLENBQUksVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRS9ELE9BQU8sVUFBVSxDQUFDO0FBQ25CLENBQUM7QUFYRCxnREFXQztBQUVELGtCQUFlLGtCQUFrQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IHVzZXIgb24gMjAxOC8yLzEwLzAxMC5cbiAqL1xuXG5pbXBvcnQgeyBEZWNvcmF0b3JVdGlscyB9IGZyb20gXCJkZWNvcmF0b3ItdXRpbHNcIjtcbmltcG9ydCBCbHVlYmlyZCA9IHJlcXVpcmUoXCJibHVlYmlyZFwiKTtcbmltcG9ydCBQcm9taXNlQmx1ZWJpcmQgPSByZXF1aXJlKFwiYmx1ZWJpcmRcIik7XG5cbmV4cG9ydCB7IFByb21pc2VCbHVlYmlyZCB9XG5cbmV4cG9ydCBjb25zdCBibHVlYmlyZERlY29yYXRvciA9IERlY29yYXRvclV0aWxzLmNyZWF0ZURlY29yYXRvcihbXG5cdERlY29yYXRvclV0aWxzLmRlY2xhcmF0aW9uVHlwZXMuQ0xBU1NfTUVUSE9ELFxuXHREZWNvcmF0b3JVdGlscy5kZWNsYXJhdGlvblR5cGVzLkNMQVNTX0FDQ0VTU09SLFxuXHREZWNvcmF0b3JVdGlscy5kZWNsYXJhdGlvblR5cGVzLk9CSkVDVF9MSVRFUkFMX01FVEhPRCxcblx0RGVjb3JhdG9yVXRpbHMuZGVjbGFyYXRpb25UeXBlcy5PQkpFQ1RfTElURVJBTF9BQ0NFU1NPUlxuXSwgPFQ+KHRhcmdldDogT2JqZWN0LCBwcm9wZXJ0eUtleTogc3RyaW5nIHwgc3ltYm9sLCBkZXNjcmlwdG9yOiBUeXBlZFByb3BlcnR5RGVzY3JpcHRvcjwoLi4uYXJncykgPT4gQmx1ZWJpcmQ8VD4+KSA9Plxue1xuXHRsZXQgbWV0aG9kID0gZGVzY3JpcHRvci52YWx1ZTtcblxuXHRkZXNjcmlwdG9yLnZhbHVlID0gZnVuY3Rpb24gKC4uLmFyZ3MpOiBCbHVlYmlyZDxUPlxuXHR7XG5cdFx0bGV0IHNlbGYgPSB0aGlzO1xuXHRcdC8vcmV0dXJuIHJldHVyblZhbHVlIGluc3RhbmNlb2YgUHJvbWlzZSA/IEJsdWViaXJkLnJlc29sdmUocmV0dXJuVmFsdWUpIDogcmV0dXJuVmFsdWU7XG5cdFx0cmV0dXJuIEJsdWViaXJkLnJlc29sdmUoKS50aGVuKGZ1bmN0aW9uICgpXG5cdFx0e1xuXHRcdFx0cmV0dXJuIG1ldGhvZC5hcHBseShzZWxmLCBhcmdzKTtcblx0XHR9KTtcblx0fTtcblxuXHRyZXR1cm4gZGVzY3JpcHRvcjtcbn0pIGFzIE1ldGhvZERlY29yYXRvcjtcblxuZXhwb3J0IGZ1bmN0aW9uIGJsdWViaXJkRGVjb3JhdG9yMjxUPih0YXJnZXQ6IGFueSwgcHJvcGVydHlLZXk6IHN0cmluZywgZGVzY3JpcHRvcjogUHJvcGVydHlEZXNjcmlwdG9yKVxue1xuXHQvKlxuXHRpZiAoZGVzY3JpcHRvciA9PT0gdW5kZWZpbmVkKVxuXHR7XG5cdFx0ZGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBwcm9wZXJ0eUtleSk7XG5cdH1cblx0Ki9cblx0ZGVzY3JpcHRvci52YWx1ZSA9IFByb21pc2VCbHVlYmlyZC5tZXRob2Q8VD4oZGVzY3JpcHRvci52YWx1ZSk7XG5cblx0cmV0dXJuIGRlc2NyaXB0b3I7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGJsdWViaXJkRGVjb3JhdG9yMjtcbiJdfQ==